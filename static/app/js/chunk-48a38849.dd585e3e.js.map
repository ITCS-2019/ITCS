{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_array-methods.js","webpack:///./src/views/Certificates.vue?0762","webpack:///src/views/Certificates.vue","webpack:///./src/views/Certificates.vue?51d4","webpack:///./src/views/Certificates.vue","webpack:///./node_modules/core-js/modules/es6.array.find.js","webpack:///./node_modules/core-js/modules/_array-species-create.js","webpack:///./node_modules/core-js/modules/_array-species-constructor.js"],"names":["ctx","__webpack_require__","IObject","toObject","toLength","asc","module","exports","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","create","$this","callbackfn","that","val","res","O","self","f","length","index","result","undefined","push","render","_vm","this","_h","$createElement","_c","_self","attrs","fill-height","fluid","grid-list-xl","pt-0","justify-center","wrap","md12","id","justify-space-between","offset-y","content-class","transition","slot","color","small","left","_v","staticClass","dense","key","on","click","e","exportGrid","domProps","textContent","_s","$event","printGrid","handleCerts","depressed","showModal","ref","tableConfig","snackbarConfig","top","dark","model","value","callback","$$v","snackbar","expression","icon","message","size","persistent","max-width","modal","modalConfig","flat","removeCerts","staticRenderFns","Certificatesvue_type_script_lang_js_","data","_tableConfig","_this2","exportType","clickDelay","dataSource","allowColumnReordering","allowColumnResizing","columnAutoWidth","showBorders","showRowLines","editing","mode","allowUpdating","selection","showCheckBoxesMode","paging","enabled","pageSize","pager","showPageSizeSelector","allowedPageSizes","showInfo","visible","searchPanel","width","placeholder","export","fileName","allowExportSelectedData","rowAlternationEnabled","customizeExportData","cols","rows","certIDs","forEach","row","certificateId","element","document","createElement","setAttribute","concat","join","style","display","body","appendChild","removeChild","onFileSaving","cancel","headerFilter","filterRow","applyFilter","hoverStateEnabled","wordWrapEnabled","Object","defineProperty","certsGrid","component","selected","_options","getSelectedRowKeys","option","_this","initialClick","clickCount","clickKey","clickDate","Date","setTimeout","column","dataField","isSelected","deselectRows","selectRows","doubleClick","clearTimeout","$router","gUserRole","window","location","replace","sailorId","trainigOrganisation","changePage","page","pageIndex","$customPagination","$","$select","pageCount","currentPage","$firstPageBtn","$lastPageBtn","$nextPageBtn","$prevPageBtn","$gridToolbar","find","$appendedPagination","empty","i","append","remove","attr","fadeIn","allowExporting","caption","allowEditing","allowFiltering","dataType","format","mounted","_this3","axios","get","then","certs","certificates","cert","status","certificateNumber","certf_number","blankNumber","form_number","issueDate","date_of_issue","validDate","valid_date","trainingDirection","training_direction","direction_title","sailor_id","sailor","first_name_ukr","last_name_ukr","trainigOrganisation_name","$refs","tableInstance","endCustomLoading","catch","err","console","log","methods","arguments","grid","selectedRows","getSelectedRowsData","isInvalidData","some","_this4","sendRows","params","error","error_message","includes","splice","refresh","_this5","dataItem","isSelection","exportToExcel","gridRef","$grid","_$element","$head","$rows","mywindow","open","write","title","html","close","focus","print","views_Certificatesvue_type_script_lang_js_","componentNormalizer","__webpack_exports__","$export","$find","KEY","forced","Array","P","F","speciesConstructor","original","isObject","isArray","SPECIES","C","constructor","prototype"],"mappings":"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","file":"js/chunk-48a38849.dd585e3e.js","sourcesContent":["// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx = require('./_ctx');\nvar IObject = require('./_iobject');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar asc = require('./_array-species-create');\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{attrs:{\"fill-height\":\"\",\"fluid\":\"\",\"grid-list-xl\":\"\",\"pt-0\":\"\"}},[_c('v-layout',{attrs:{\"justify-center\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"md12\":\"\"}},[_c('material-card',[_c('v-layout',{attrs:{\"id\":\"grid-controls\",\"justify-space-between\":\"\",\"wrap\":\"\"}},[_c('div',[_c('v-menu',{attrs:{\"offset-y\":\"\",\"content-class\":\"dropdown-menu\",\"transition\":\"slide-y-transition\"}},[_c('v-btn',{attrs:{\"slot\":\"activator\",\"color\":\"success\",\"small\":\"\"},slot:\"activator\"},[_c('v-icon',{attrs:{\"left\":\"\"}},[_vm._v(\"\\n                  mdi-file-excel\\n                \")]),_c('span',{staticClass:\"font-weight-bold ml-1\"},[_vm._v(\"\\n                  Excel\\n                \")])],1),_c('v-card',[_c('v-list',{attrs:{\"dense\":\"\"}},[_c('v-list-tile',{key:\"all\",on:{\"click\":function (e) { return _vm.exportGrid(false, 'XLSExp'); }}},[_c('v-list-tile-title',{domProps:{\"textContent\":_vm._s(\"Експортувати все\")}})],1),_c('v-list-tile',{key:\"checked\",on:{\"click\":function (e) { return _vm.exportGrid(true, 'XLSExp'); }}},[_c('v-list-tile-title',{domProps:{\"textContent\":_vm._s(\"Експортувати обране\")}})],1)],1)],1)],1),_c('v-menu',{attrs:{\"offset-y\":\"\",\"content-class\":\"dropdown-menu\",\"transition\":\"slide-y-transition\"}},[_c('v-btn',{attrs:{\"slot\":\"activator\",\"color\":\"success\",\"small\":\"\"},slot:\"activator\"},[_c('v-icon',{attrs:{\"left\":\"\"}},[_vm._v(\"\\n                  mdi-file-pdf\\n                \")]),_c('span',{staticClass:\"font-weight-bold ml-1\"},[_vm._v(\"\\n                  PDF\\n                \")])],1),_c('v-card',[_c('v-list',{attrs:{\"dense\":\"\"}},[_c('v-list-tile',{key:\"all\",on:{\"click\":function (e) { return _vm.exportGrid(false, 'PdfExp'); }}},[_c('v-list-tile-title',{domProps:{\"textContent\":_vm._s(\"Експортувати все\")}})],1),_c('v-list-tile',{key:\"checked\",on:{\"click\":function (e) { return _vm.exportGrid(true, 'PdfExp'); }}},[_c('v-list-tile-title',{domProps:{\"textContent\":_vm._s(\"Експортувати обране\")}})],1)],1)],1)],1),_c('v-btn',{attrs:{\"color\":\"success\",\"small\":\"\"},on:{\"click\":function($event){return _vm.printGrid('certsGrid')}}},[_c('v-icon',[_vm._v(\"\\n                mdi-printer\\n              \")]),_c('span',{staticClass:\"font-weight-bold ml-1\"},[_vm._v(\"\\n                Друкувати\\n              \")])],1)],1),_c('div',[_c('v-btn',{attrs:{\"color\":\"success\",\"small\":\"\"},on:{\"click\":_vm.handleCerts}},[_c('v-icon',[_vm._v(\"\\n                mdi-file-move\\n              \")]),_c('span',{staticClass:\"font-weight-bold ml-1\"},[_vm._v(\"\\n                В обробку\\n              \")])],1),_c('v-btn',{staticClass:\"ml-1\",attrs:{\"color\":\"warning\",\"small\":\"\",\"depressed\":true},on:{\"click\":function (e) { return _vm.showModal('Видалити обранi сертифiкати?'); }}},[_c('v-icon',[_vm._v(\"\\n                mdi-trash-can\\n              \")]),_c('span',{staticClass:\"font-weight-bold ml-1\"},[_vm._v(\"\\n                Видалити\\n              \")])],1)],1)]),_c('DxGrid',{ref:\"certsGrid\",attrs:{\"tableConfig\":_vm.tableConfig}})],1)],1)],1),_c('v-snackbar',{attrs:{\"color\":_vm.snackbarConfig.color,\"top\":true,\"dark\":\"\"},model:{value:(_vm.snackbar),callback:function ($$v) {_vm.snackbar=$$v},expression:\"snackbar\"}},[_c('v-icon',{staticClass:\"mr-3\",attrs:{\"color\":\"white\"}},[_vm._v(\"\\n      \"+_vm._s(_vm.snackbarConfig.icon)+\"\\n    \")]),_c('div',[_vm._v(\"\\n      \"+_vm._s(_vm.snackbarConfig.message)+\"\\n    \")]),_c('v-icon',{attrs:{\"size\":\"16\"},on:{\"click\":function($event){_vm.snackbar = false}}},[_vm._v(\"\\n      mdi-close-circle\\n    \")])],1),_c('v-dialog',{attrs:{\"persistent\":\"\",\"max-width\":\"290\"},model:{value:(_vm.modal),callback:function ($$v) {_vm.modal=$$v},expression:\"modal\"}},[_c('v-card',[_c('v-card-title',{staticClass:\"headline\"},[_vm._v(\"\\n        Пiдтвердiть дiю\\n      \")]),_c('v-card-text',[_vm._v(\"\\n        \"+_vm._s(_vm.modalConfig.message)+\"\\n      \")]),_c('v-card-actions',[_c('v-spacer'),_c('v-btn',{attrs:{\"color\":\"green darken-1\",\"flat\":\"\"},on:{\"click\":_vm.removeCerts}},[_vm._v(\"\\n          Так\\n        \")]),_c('v-btn',{attrs:{\"color\":\"red darken-1\",\"flat\":\"\"},on:{\"click\":function($event){_vm.modal = false}}},[_vm._v(\"\\n          Нi\\n        \")])],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--TODO change certsGrid to grid-->\n<template>\n  <v-container\n    fill-height\n    fluid\n    grid-list-xl\n    pt-0\n  >\n    <v-layout\n      justify-center\n      wrap\n    >\n      <v-flex\n        md12\n      >\n        <material-card>\n          <v-layout id=\"grid-controls\"\n          justify-space-between\n          wrap>\n\n            <!--Grid btns row left side-->\n            <div>\n              <v-menu offset-y\n              content-class=\"dropdown-menu\"\n              transition=\"slide-y-transition\">\n                <v-btn slot=\"activator\"\n                color=\"success\"\n                small>\n                  <v-icon left>\n                    mdi-file-excel\n                  </v-icon>\n                  <span class=\"font-weight-bold ml-1\">\n                    Excel\n                  </span>\n                </v-btn>\n                <v-card>\n                  <v-list dense>\n                    <v-list-tile key=\"all\"\n                    v-on:click=\"e => exportGrid(false, 'XLSExp')\">\n                      <v-list-tile-title v-text=\"`Експортувати все`\"/>\n                    </v-list-tile>\n                    <v-list-tile key=\"checked\"\n                    v-on:click=\"e => exportGrid(true, 'XLSExp')\">\n                      <v-list-tile-title v-text=\"`Експортувати обране`\"/>\n                    </v-list-tile>\n                  </v-list>\n                </v-card>\n              </v-menu>\n              <v-menu offset-y\n              content-class=\"dropdown-menu\"\n              transition=\"slide-y-transition\">\n                <v-btn slot=\"activator\"\n                color=\"success\"\n                small>\n                  <v-icon left>\n                    mdi-file-pdf\n                  </v-icon>\n                  <span class=\"font-weight-bold ml-1\">\n                    PDF\n                  </span>\n                </v-btn>\n                <v-card>\n                  <v-list dense>\n                    <v-list-tile key=\"all\"\n                    v-on:click=\"e => exportGrid(false, 'PdfExp')\">\n                      <v-list-tile-title v-text=\"`Експортувати все`\"/>\n                    </v-list-tile>\n                    <v-list-tile key=\"checked\"\n                    v-on:click=\"e => exportGrid(true, 'PdfExp')\">\n                      <v-list-tile-title v-text=\"`Експортувати обране`\"/>\n                    </v-list-tile>\n                  </v-list>\n                </v-card>\n              </v-menu>\n              <v-btn color=\"success\" small\n              v-on:click=\"printGrid('certsGrid')\">\n                <v-icon>\n                  mdi-printer\n                </v-icon>\n                <span class=\"font-weight-bold ml-1\">\n                  Друкувати\n                </span>\n              </v-btn>\n            </div>\n\n            <!--Grid btns row right side-->\n            <div>\n              <v-btn color=\"success\"\n              small\n              v-on:click=\"handleCerts\">\n                <v-icon>\n                  mdi-file-move\n                </v-icon>\n                <span class=\"font-weight-bold ml-1\">\n                  В обробку\n                </span>\n              </v-btn>\n              <v-btn color=\"warning\"\n              small\n              v-on:click=\"e => showModal('Видалити обранi сертифiкати?')\"\n              class=\"ml-1\"\n              :depressed=\"true\">\n                <v-icon>\n                  mdi-trash-can\n                </v-icon>\n                <span class=\"font-weight-bold ml-1\">\n                  Видалити\n                </span>\n              </v-btn>\n            </div>\n          </v-layout>\n\n          <DxGrid :tableConfig=\"tableConfig\" ref=\"certsGrid\"/>\n        </material-card>\n      </v-flex>\n    </v-layout>\n\n    <!--Notifications-->\n    <v-snackbar :color=\"snackbarConfig.color\"\n    :top=\"true\"\n    v-model=\"snackbar\"\n    dark>\n      <v-icon color=\"white\"\n      class=\"mr-3\">\n        {{snackbarConfig.icon}}\n      </v-icon>\n      <div>\n        {{snackbarConfig.message}}\n      </div>\n      <v-icon size=\"16\"\n      v-on:click=\"snackbar = false\">\n        mdi-close-circle\n      </v-icon>\n    </v-snackbar>\n\n    <!--Modal-->\n    <v-dialog v-model=\"modal\" persistent max-width=\"290\">\n      <v-card>\n        <v-card-title class=\"headline\">\n          Пiдтвердiть дiю\n        </v-card-title>\n        <v-card-text>\n          {{modalConfig.message}}\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"green darken-1\"\n          flat\n          v-on:click=\"removeCerts\">\n            Так\n          </v-btn>\n          <v-btn color=\"red darken-1\"\n          flat\n          v-on:click=\"modal = false\">\n            Нi\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </v-container>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      modal: false,\n      modalConfig: {\n        message: null\n      },\n      snackbar: false,\n      snackbarConfig: {\n        color: null,\n        icon: null,\n        message: null\n      },\n      exportType: null,\n      clickDelay: undefined,\n      dataSource: [],\n      tableConfig: {\n        dataSource: [],\n        allowColumnReordering: false,\n        allowColumnResizing: true,\n        columnAutoWidth: false,\n        showBorders: true,\n        showRowLines: true,\n        editing: {\n          mode: \"cell\",\n          allowUpdating: true\n        },\n        selection: {\n          mode: \"multiple\",\n          showCheckBoxesMode: 'always'\n        },\n        paging: {\n          enabled: true,\n          pageSize: 10\n        },\n        pager: {\n          showPageSizeSelector: true,\n          allowedPageSizes: [10, 20, 50, 100],\n          showInfo: true,\n          visible: true\n        },\n        searchPanel: {\n          visible: true,\n          width: 240,\n          placeholder: \"Шукати...\"\n        },\n        export: {\n          enabled: false,\n          fileName: \"certificates\",\n          allowExportSelectedData: true\n        },\n        rowAlternationEnabled: true,\n        customizeExportData: (cols, rows) => {\n          let certIDs = [];\n\n          if (rows.length > 0) {\n            rows.forEach((row) => {\n              certIDs.push(row.data.certificateId);\n            });\n\n            let element = document.createElement('a');\n            element.setAttribute('href', `/mariner/api/exportToPrint/?exportType=${this.exportType}&certIDs=${certIDs.join(',')}`);\n            element.setAttribute('target', '_blank');\n            element.style.display = 'none';\n            document.body.appendChild(element);\n            element.click();\n            document.body.removeChild(element);\n          }\n        },\n        onFileSaving: function (e) {\n          e.cancel = true;\n        },\n        headerFilter: {\n          visible: true\n        },\n        filterRow: {\n          visible: true,\n          applyFilter: \"auto\"\n        },\n        hoverStateEnabled: true,\n        wordWrapEnabled: true,\n        columnAutoWidth: true,\n        onSelectionChanged: function(e) {\n          let certsGrid = e.component,\n              selected = (certsGrid._options.selection.mode === 'multiple') ? `, Вибрано: ${certsGrid.getSelectedRowKeys().length}` : '';\n\n          certsGrid.option('pager.infoText', `Всього: ${certsGrid.option('dataSource').length}${selected}`);\n        },\n        onCellClick: (e) => {\n          let certsGrid = e.component,\n              _this = this;\n\n          function initialClick() {\n            certsGrid.clickCount = 1;\n            certsGrid.clickKey = e.key;\n            certsGrid.clickDate = new Date();\n            _this.clickDelay = setTimeout(() => {\n              if (e.column.dataField) {\n                if (e.row.isSelected) {\n                  certsGrid.deselectRows([e.key]);\n                }\n                else {\n                  certsGrid.selectRows([e.key], true);\n                }\n              }\n            }, 300);\n          }\n\n          function doubleClick() {\n            clearTimeout(_this.clickDelay);\n            certsGrid.clickCount = 0;\n            certsGrid.clickKey = 0;\n            certsGrid.clickDate = null;\n            switch (e.column.dataField) {\n              case 'certificateNumber':\n                _this.$router.push(`/mariner/app/edit-certificate/${e.data.certificateId}`);\n                return;\n              case 'sailor':\n                if (gUserRole === 'НТЗ') {\n                  _this.$router.push(`/mariner/app/edit-certificate/${e.data.certificateId}`);\n                }\n                else {\n                  window.location.replace(`/mariner/sailor/${e.data.sailorId}`);\n                }\n                return;\n              case 'trainigOrganisation':\n                window.location.replace(`/mariner/trainigOrganisation/${e.data.trainigOrganisation}`);\n                return;\n            }\n\n            if (e.column.dataField) {\n              _this.$router.push(`/mariner/app/edit-certificate/${e.data.certificateId}`);\n            }\n          }\n\n          if ((!certsGrid.clickCount) || (certsGrid.clickCount != 1) || (certsGrid.clickKey != e.key) ) {\n            initialClick();\n          }\n          else if (certsGrid.clickKey == e.key) {\n            if (((new Date()) - certsGrid.clickDate) <= 300) {\n              doubleClick();\n            }\n            else {\n              initialClick();\n            }\n          }\n        },\n        onContentReady: (e) => {\n          function changePage(page) {\n            e.component.pageIndex(page);\n          }\n\n          let $customPagination = $('.custom-pagination.custom-pagination--grid'),\n              $select = $('.custom-pagination__select', $customPagination),\n              pageCount = e.component.pageCount(),\n              currentPage = e.component.pageIndex(),\n              $firstPageBtn = $('.custom-pagination__btn--first-page', $customPagination),\n              $lastPageBtn = $('.custom-pagination__btn--last-page', $customPagination),\n              $nextPageBtn = $('.custom-pagination__btn--next', $customPagination),\n              $prevPageBtn = $('.custom-pagination__btn--prev', $customPagination),\n              $gridToolbar = (e.element.find('.dx-toolbar-items-container').length > 0)\n                      ? e.element.find('.dx-datagrid-header-panel .dx-toolbar-items-container')\n                      : e.element.find('.dx-datagrid-header-panel'),\n              $appendedPagination = $('.custom-pagination.custom-pagination--grid', $gridToolbar);\n\n          if (pageCount > 1) {\n            $select.empty();\n            for (let i = 0; i < pageCount; i++) {\n              (i === currentPage)\n                      ? $select.append(`<option selected=\"selected\" value=\"${i}\">${i + 1}</option>>`)\n                      : $select.append(`<option value=\"${i}\">${i + 1}</option>>`);\n            }\n\n            $appendedPagination.remove();\n            $gridToolbar.append($customPagination);\n\n            if (currentPage === 0) {\n              $firstPageBtn.attr('disabled', true);\n              $prevPageBtn.attr('disabled', true);\n            }\n            else {\n              $firstPageBtn.attr('disabled', false);\n              $prevPageBtn.attr('disabled', false);\n            }\n\n            if ((currentPage + 1) === pageCount) {\n              $lastPageBtn.attr('disabled', true);\n              $nextPageBtn.attr('disabled', true);\n            }\n            else {\n              $lastPageBtn.attr('disabled', false);\n              $nextPageBtn.attr('disabled', false);\n            }\n\n            $select.on('change', function() {changePage($(this).val(), pageCount)});\n            $firstPageBtn.on('click', function() {changePage(0, pageCount)});\n            $lastPageBtn.on('click', function() {changePage(pageCount - 1)});\n            $nextPageBtn.on('click', function() {changePage(currentPage + 1)});\n            $prevPageBtn.on('click', function() {changePage(currentPage - 1)});\n\n            $customPagination.fadeIn('fast');\n          }\n        },\n        columns: [\n          {\n            dataField: 'certificateId',\n            visible: false,\n            allowExporting: false\n          },\n          {\n            dataField: 'certificateNumber',\n            caption: '№ Сертифіката',\n            allowEditing: false,\n            allowFiltering: true,\n          },\n          {\n            dataField: 'blankNumber',\n            caption: '№ Бланку',\n            allowEditing: false,\n            allowFiltering: true,\n          },\n          {\n            dataField: 'issueDate',\n            caption: 'Дата видачі',\n            dataType: 'date',\n            allowEditing: false,\n            format: 'dd.MM.yyyy',\n          },\n          {\n            dataField: 'validDate',\n            caption: 'Дійсний до',\n            dataType: 'date',\n            allowEditing: false,\n            format: 'dd.MM.yyyy',\n          },\n          {\n            dataField: 'certificateNumberGenerated',\n            caption: '№ сертифіката(сген.)',\n            allowEditing: false,\n            visible: false\n          },\n          {\n            dataField: 'trainingDirection',\n            caption: 'Напрямок підготовки',\n            allowEditing: false,\n            allowFiltering: true,\n          },\n          {\n            dataField: 'sailorId',\n            visible: false,\n          },\n          {\n            dataField: 'sailor',\n            caption: 'Моряк',\n            allowEditing: false,\n            allowFiltering: true,\n          },\n          {\n            dataField: 'trainigOrganisation',\n            caption: 'НТЗ',\n            allowEditing: false,\n            allowFiltering: true,\n            visible: gUserRole !== 'НТЗ',\n          },\n          {\n            dataField: 'status',\n            caption: 'Статус',\n            allowEditing: false,\n          }\n        ]\n      }\n    }\n  },\n\n  mounted() {\n    axios.get(`/mariner/api/certificates/`)\n      .then(res => {\n        let certs = res.data.certificates;\n\n        certs.forEach((cert) => {\n          let status;\n\n          switch (cert.status) {\n            case 0:\n              status = 'Чернетка';\n              break;\n            case 1:\n              status = 'Обробка';\n              break;\n            case 2:\n              status = 'Видан';\n              break;\n            case 3:\n              status = 'Анульований';\n              break;\n          }\n\n          this.dataSource.push({\n            certificateId: cert.id,\n            certificateNumber: cert.certf_number,\n            blankNumber: cert.form_number,\n            issueDate: cert.date_of_issue,\n            validDate: cert.valid_date,\n            trainingDirection: cert.training_direction.direction_title,\n            sailorId: cert.sailor_id,\n            sailor: `${cert.first_name_ukr} ${cert.last_name_ukr}`,\n            trainigOrganisation: cert.trainigOrganisation_name,\n            status: status\n          });\n        });\n\n        let certsGrid = this.$refs.certsGrid.tableInstance,\n            selected = (certsGrid._options.selection.mode === 'multiple') ? `, Вибрано: ${certsGrid.getSelectedRowKeys().length}` : '';\n\n        certsGrid.option('dataSource', this.dataSource);\n        certsGrid.option('pager.infoText', `Всього: ${certsGrid.option('dataSource').length}${selected}`);\n        certsGrid.endCustomLoading();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  },\n\n  methods: {\n    showModal(message = false) {\n      let grid = this.$refs.certsGrid.tableInstance,\n          selectedRows = grid.getSelectedRowsData();\n\n      this.modalConfig.message = message;\n\n      if (selectedRows.length > 0) {\n        let isInvalidData = false;\n\n        selectedRows.some((row) => {\n          if (row.status !== 'Чернетка') {\n            isInvalidData = true;\n            return true;\n          }\n        });\n\n        if (!isInvalidData) {\n          this.modal = true;\n        }\n        else {\n          this.snackbarConfig.icon = 'mdi-alert-circle';\n          this.snackbarConfig.color = 'red';\n          this.snackbarConfig.message = 'Можливо видаляти тiльки сертифiкати зi статусом \"Чернетка\"!';\n          this.snackbar = true;\n        }\n      }\n      else {\n        this.snackbarConfig.icon = 'mdi-alert-circle';\n        this.snackbarConfig.color = 'red';\n        this.snackbarConfig.message = 'Не вибрано жодного сертифiката!';\n        this.snackbar = true;\n      }\n    },\n\n    removeCerts() {\n      let grid = this.$refs.certsGrid.tableInstance,\n          selectedRows = grid.getSelectedRowsData(),\n          sendRows = [];\n\n      this.modal = false;\n\n      selectedRows.some((row) => {\n        sendRows.push(row.certificateId);\n      });\n\n      axios.get(`/mariner/api/removeDraftCerts/`,\n      {\n        params: {\n          certIDs: sendRows.join(',')\n        }\n      })\n        .then(res => {\n          if (!res.error) {\n            this.snackbarConfig.icon = 'mdi-check-circle';\n            this.snackbarConfig.color = 'success';\n            this.snackbarConfig.message = 'Сертифiкати успiшно видаленi!';\n            this.snackbar = true;\n\n            // change status in grid without reload\n            let i = this.dataSource.length;\n\n            while (i--) {\n              if (sendRows.includes(this.dataSource[i].certificateId)) {\n                this.dataSource.splice(i, 1);\n              }\n            }\n            grid.refresh();\n          }\n          else {\n            this.snackbarConfig.icon = 'mdi-alert-circle';\n            this.snackbarConfig.color = 'red';\n            this.snackbarConfig.message = res.error_message;\n            this.snackbar = true;\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n\n    handleCerts() {\n      let grid = this.$refs.certsGrid.tableInstance,\n          selectedRows = grid.getSelectedRowsData();\n\n      if (selectedRows.length > 0) {\n        let isInvalidData = false,\n            sendRows = [];\n\n        selectedRows.some((row) => {\n          if (row.status !== 'Чернетка') {\n            isInvalidData = true;\n            return true;\n          }\n          else {\n            sendRows.push(row.certificateId);\n          }\n        });\n\n        if (!isInvalidData) {\n          axios.get(`/mariner/api/changeToReviewStatus/`,\n          {\n            params: {\n              certIDs: sendRows.join(',')\n            }\n          })\n            .then(res => {\n              if (!res.error) {\n                this.snackbarConfig.icon = 'mdi-check-circle';\n                this.snackbarConfig.color = 'success';\n                this.snackbarConfig.message = 'Сертифiкати успiшно вiдправленi в обробку!';\n                this.snackbar = true;\n\n                // change status in grid without reload\n                this.dataSource.forEach((dataItem) => {\n                  if (sendRows.includes(dataItem.certificateId)) {\n                    dataItem.status = 'Обробка';\n                  }\n                });\n                grid.refresh();\n              }\n              else {\n                this.snackbarConfig.icon = 'mdi-alert-circle';\n                this.snackbarConfig.color = 'red';\n                this.snackbarConfig.message = res.error_message;\n                this.snackbar = true;\n              }\n            })\n            .catch((err) => {\n              console.log(err);\n            });\n        }\n        else {\n          this.snackbarConfig.icon = 'mdi-alert-circle';\n          this.snackbarConfig.color = 'red';\n          this.snackbarConfig.message = 'Змiнити статус на \"Обробка\" можливо тiльки для сертифiкатiв зi статусом \"Чернетка\"!';\n          this.snackbar = true;\n        }\n      }\n      else {\n        this.snackbarConfig.icon = 'mdi-alert-circle';\n        this.snackbarConfig.color = 'red';\n        this.snackbarConfig.message = 'Не вибрано жодного сертифiката!';\n        this.snackbar = true;\n      }\n    },\n\n    exportGrid(isSelection, exportType) {\n      let grid = this.$refs.certsGrid.tableInstance;\n\n      this.exportType = exportType;\n      grid.exportToExcel((typeof isSelection === 'boolean') ? isSelection : false);\n    },\n\n    printGrid(gridRef) {\n\n      // TODO: Refactor to pure js\n      let $grid = this.$refs[`${gridRef}`].tableInstance._$element,\n          $head = $('.dx-datagrid-headers', $grid),\n          $rows = $('.dx-datagrid-rowsview', $grid),\n          mywindow = window.open('', 'PRINT', 'height=400,width=600');\n\n      mywindow.document.write('<html><head><title>' + document.title  + '</title>');\n      mywindow.document.write('</head><body >');\n      mywindow.document.write('<h1>' + document.title  + '</h1>');\n      mywindow.document.write(`${$head.html()}${$rows.html()}`);\n      mywindow.document.write('</body></html>');\n\n      mywindow.document.close();\n      mywindow.focus();\n\n      mywindow.print();\n      mywindow.close();\n\n      return true;\n    }\n  }\n}\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Certificates.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Certificates.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Certificates.vue?vue&type=template&id=6070a69d&\"\nimport script from \"./Certificates.vue?vue&type=script&lang=js&\"\nexport * from \"./Certificates.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = require('./_array-species-constructor');\n\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n","var isObject = require('./_is-object');\nvar isArray = require('./_is-array');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n"],"sourceRoot":""}